/// <reference types="node" />
import { buildDecrypt } from './decrypt_client';
import { DecryptOutput } from './decrypt';
export { MessageHeader } from '@aws-crypto/serialize';
/** @deprecated Use `buildDecrypt(CommitmentPolicy.FORBID_ENCRYPT_ALLOW_DECRYPT)` for migration. */
declare const decrypt: (args_0: import("@aws-crypto/material-management-node").KeyringNode | import("@aws-crypto/material-management-node").NodeMaterialsManager, args_1: string | Uint8Array | Buffer | NodeJS.ReadableStream | import("stream").Readable, args_2?: import("./decrypt").DecryptOptions | undefined) => Promise<DecryptOutput>;
/** @deprecated Use `buildDecrypt(CommitmentPolicy.FORBID_ENCRYPT_ALLOW_DECRYPT)` for migration. */
declare const decryptStream: (args_0: import("@aws-crypto/material-management-node").KeyringNode | import("@aws-crypto/material-management-node").NodeMaterialsManager, args_1?: import("./types").DecryptStreamOptions | undefined) => import("stream").Duplex;
/** @deprecated Use `buildDecrypt(CommitmentPolicy.FORBID_ENCRYPT_ALLOW_DECRYPT)` for migration. */
declare const decryptUnsignedMessageStream: (args_0: import("@aws-crypto/material-management-node").KeyringNode | import("@aws-crypto/material-management-node").NodeMaterialsManager, args_1?: import("./types").DecryptStreamOptions | undefined) => import("stream").Duplex;
export { decrypt, decryptStream, decryptUnsignedMessageStream };
export { buildDecrypt, DecryptOutput };
//# sourceMappingURL=index.d.ts.map